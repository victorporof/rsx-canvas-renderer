{"version":3,"sources":["renderer.js"],"names":["Renderer","constructor","view","images","Map","fonts","fontInstances","insertCommonStyle","document","ownerDocument","style","createElement","type","parentNode","insertBefore","firstChild","appendChild","createTextNode","insertFontFaceStyle","fontKey","dataUri","getElementsByTagName","font","load","insertResourceUpdates","resourceUpdates","outstanding","forEach","update","resource","AddImage","key","imageKey","data_uri","imageDataUri","set","AddFont","fontDataUri","push","AddFontInstance","instance_key","fontInstanceKey","size","fontSize","Promise","all","applyDisplayListDiff","displayListDiff","diff","M","index","changes","change","specific","T","changeText","I","B","R","Z","changeBounds","D","AddRect","appendRect","AddBorder","appendBorder","appendImage","AddText","appendText","mount","shadow","attachShadow","mode","draw","length"],"mappings":"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","file":"renderer.js","sourcesContent":["/*\nCopyright 2016 Mozilla\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n*/\n\n/* eslint no-cond-assign: \"off\" */\n\nimport FontFaceObserver from 'fontfaceobserver';\n\nclass Renderer {\n  constructor(view) {\n    this.images = new Map();\n    this.fonts = new Map();\n    this.fontInstances = new Map();\n    this.view = view;\n  }\n\n  insertCommonStyle() {\n    const document = this.view.ownerDocument;\n    const style = document.createElement('style');\n    style.type = 'text/css';\n\n    this.view.parentNode.insertBefore(style, this.view.parentNode.firstChild);\n    style.appendChild(document.createTextNode(`\n      * {\n        position: absolute;\n        pointer-events: none;\n      }\n      pre {\n        pointer-events: auto;\n        margin: 0;\n      }`));\n  }\n\n  insertFontFaceStyle(fontKey, dataUri) {\n    const document = this.view.ownerDocument;\n    const style = document.createElement('style');\n    style.type = 'text/css';\n\n    document.getElementsByTagName('head')[0].appendChild(style);\n    style.appendChild(document.createTextNode(`\n      @font-face {\n        font-family: \"${fontKey}\";\n        src: url(${dataUri});\n      }`));\n\n    const font = new FontFaceObserver(`${fontKey}`);\n    return font.load();\n  }\n\n  insertResourceUpdates(resourceUpdates) {\n    const outstanding = [];\n\n    resourceUpdates.forEach((update) => {\n      let resource;\n      if (resource = update.AddImage) {\n        const { key: imageKey, data_uri: imageDataUri } = resource;\n        this.images.set(imageKey, imageDataUri);\n      } else if (resource = update.AddFont) {\n        const { key: fontKey, data_uri: fontDataUri } = resource;\n        this.fonts.set(fontKey, fontDataUri);\n        outstanding.push(this.insertFontFaceStyle(fontKey, fontDataUri));\n      } else if (resource = update.AddFontInstance) {\n        const { key: fontKey, instance_key: fontInstanceKey, size: fontSize } = resource;\n        this.fontInstances.set(fontInstanceKey, { fontKey, fontSize });\n      }\n    });\n\n    return Promise.all(outstanding);\n  }\n\n  applyDisplayListDiff(displayListDiff) {\n    displayListDiff.forEach((diff) => {\n      let update;\n      if (update = diff.M) {\n        const [index, changes] = update;\n        changes.forEach((change) => {\n          let specific;\n          if (specific = change.T) {\n            this.changeText(index, specific);\n          } else if (specific = change.I) {\n            // TODO\n          } else if (specific = change.B) {\n            // TODO\n          } else if (specific = change.R) {\n            // TODO\n          } else if (specific = change.Z) {\n            this.changeBounds(index, specific);\n          }\n        });\n      } else if (update = diff.D) {\n        // TODO\n      } else if (update = diff.AddRect) {\n        this.appendRect(update);\n      } else if (update = diff.AddBorder) {\n        this.appendBorder(update);\n      } else if (update = diff.AddImage) {\n        this.appendImage(update);\n      } else if (update = diff.AddText) {\n        this.appendText(update);\n      }\n    });\n  }\n\n  mount(parentNode) {\n    const shadow = parentNode.attachShadow({ mode: 'closed' });\n    shadow.appendChild(this.view);\n    this.insertCommonStyle();\n  }\n\n  draw(resourceUpdates, displayListDiff) {\n    const outstanding = [];\n    if (resourceUpdates.length) {\n      outstanding.push(this.insertResourceUpdates(resourceUpdates));\n    }\n    if (displayListDiff.length) {\n      outstanding.push(this.applyDisplayListDiff(displayListDiff));\n    }\n    return Promise.all(outstanding);\n  }\n}\n\nexport default Renderer;\n"]}